# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type AuthPayload {
  token: String!
  refreshToken: String
}

type MessagePayload {
  message: String!
}

type Mutation {
  register(email: String!, password: String!, name: String): User!
  login(email: String!, password: String!, name: String): AuthPayload!
}

type PageInfo {
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String!
  endCursor: String!
}

type Post {
  id: ID!
  title: String!
  category: PostCategory!
  author: User!
  createdAt: String!
  updatedAt: String!
}

enum PostCategory {
  CAREER
  EDUCATION
  FINANCE
  FITNESS
  FOOD
  GAMING
  HEALTH
  NATURE
  OTHER
  PETS
  SPORTS
  TECHNOLOGY
}

type PostConnection {
  edges: [PostEdge!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

input PostCreateInput {
  title: String!
  category: PostCategory!
}

type PostEdge {
  node: Post!
  cursor: String!
}

input PostUpdateInput {
  title: String
  category: PostCategory
}

type Query {
  user(id: String!): User!
}

type User {
  id: ID!
  name: String
  email: String!
  role: UserRole!
  posts: PostConnection!
  createdAt: String!
  updatedAt: String!
}

type UserConnection {
  edges: [UserEdge!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

input UserCreateInput {
  email: String!
  password: String!
  name: String
  role: UserRole!
}

type UserEdge {
  node: User!
  cursor: String!
}

enum UserRole {
  ADMIN
  USER
}

input UserUpdateInput {
  name: String
  email: String
}
