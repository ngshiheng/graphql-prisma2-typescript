# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type AuthPayload {
  token: String!
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

type Mutation {
  createPost(title: String!, category: PostCategory!, published: Boolean): Post!
  createUser(email: String!, password: String!, name: String, isAdmin: Boolean): User!
  register(email: String!, password: String!, name: String): User!
  login(email: String!, password: String!): AuthPayload!
  updateUser(input: UserUpdateInput!, id: String!): User!
  deleteUser(id: String!): User!
  deleteUsers: [User!]!
}

enum OrderByArg {
  asc
  desc
}

type Post {
  id: ID!
  title: String!
  category: PostCategory!
  author: User!
  published: Boolean!
  createdAt: DateTime!
  updatedAt: DateTime!
}

enum PostCategory {
  CAREER
  EDUCATION
  FINANCE
  FITNESS
  FOOD
  GAMING
  HEALTH
  NATURE
  OTHER
  PETS
  SPORTS
  TECHNOLOGY
}

input PostOrderByInput {
  id: OrderByArg
  title: OrderByArg
  category: OrderByArg
  published: OrderByArg
  createdAt: OrderByArg
  updatedAt: OrderByArg
}

input PostUpdateInput {
  title: String
  category: PostCategory
}

input PostWhereUniqueInput {
  id: ID
}

type Query {
  post(id: String!): Post!
  posts(filter: String, skip: Float, orderBy: PostOrderByInput, after: PostWhereUniqueInput, before: PostWhereUniqueInput, first: Float, last: Float): [Post!]!
  me: User!
  user(id: String!): User!
  users(filter: String, skip: Float, orderBy: UserOrderByInput, after: UserWhereUniqueInput, before: UserWhereUniqueInput, first: Float, last: Float): [User!]!
}

type User {
  id: ID!
  name: String
  email: String!
  isAdmin: Boolean!
  posts: [Post!]
  createdAt: DateTime!
  updatedAt: DateTime!
}

input UserOrderByInput {
  id: OrderByArg
  name: OrderByArg
  email: OrderByArg
  isAdmin: OrderByArg
  createdAt: OrderByArg
  updatedAt: OrderByArg
}

input UserUpdateInput {
  email: String
  name: String
  isAdmin: Boolean
}

input UserWhereUniqueInput {
  id: ID
  email: String
}
